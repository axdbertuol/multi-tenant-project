"""empty message

Revision ID: c6696e94e8cf_
Revises:
Create Date: 2025-07-10 21:07:30.045219

"""

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "c6696e94e8cf_"
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute("DROP TYPE permissionactionenum")
    op.execute("DROP TYPE policyeffectenum")
    op.execute("DROP TYPE plantypeenum")
    op.execute("DROP TYPE sessionstatusenum")
    op.execute("DROP TYPE subscriptionstatusenum")
    op.execute("DROP TYPE billingcycleenum")
    op.execute("DROP TYPE folderpermissionlevelenum")

    op.create_table(
        "authorization_permissions",
        sa.Column("name", sa.String(length=100), nullable=False),
        sa.Column("description", sa.Text(), nullable=False),
        sa.Column(
            "action",
            sa.Enum(
                "CREATE",
                "READ",
                "UPDATE",
                "DELETE",
                "EXECUTE",
                "MANAGE",
                name="permissionactionenum",
            ),
            nullable=False,
        ),
        sa.Column("resource_type", sa.String(length=50), nullable=False),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.Column("is_system_permission", sa.Boolean(), nullable=False),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name", "resource_type"),
        schema="contas",
    )
    op.create_index(
        op.f("ix_contas_authorization_permissions_action"),
        "authorization_permissions",
        ["action"],
        unique=False,
        schema="contas",
    )
    op.create_index(
        op.f("ix_contas_authorization_permissions_name"),
        "authorization_permissions",
        ["name"],
        unique=False,
        schema="contas",
    )
    op.create_index(
        op.f("ix_contas_authorization_permissions_resource_type"),
        "authorization_permissions",
        ["resource_type"],
        unique=False,
        schema="contas",
    )
    op.create_table(
        "organizations",
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.Column("settings", postgresql.JSON(astext_type=sa.Text()), nullable=False),
        sa.Column("member_count", sa.Integer(), nullable=False),
        sa.Column("max_members", sa.Integer(), nullable=True),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        schema="contas",
    )
    op.create_index(
        op.f("ix_contas_organizations_name"),
        "organizations",
        ["name"],
        unique=False,
        schema="contas",
    )

    op.create_table(
        "users",
        sa.Column("email", sa.String(length=255), nullable=False),
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.Column("password_hash", sa.String(length=255), nullable=False),
        sa.Column("organization_id", sa.UUID(), nullable=True),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.Column("is_verified", sa.Boolean(), nullable=False),
        sa.Column("last_login_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(
            ["organization_id"],
            ["contas.organizations.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        schema="contas",
    )
    op.add_column(
        "organizations",
        sa.Column(
            "owner_id", sa.UUID(), sa.ForeignKey("contas.users.id"), nullable=False
        ),
        schema="contas",
    )
    op.create_index(
        op.f("ix_contas_organizations_owner_id"),
        "organizations",
        ["owner_id"],
        unique=False,
        schema="contas",
    )
    op.create_index(
        op.f("ix_contas_users_email"), "users", ["email"], unique=True, schema="contas"
    )
    op.create_index(
        op.f("ix_contas_users_organization_id"),
        "users",
        ["organization_id"],
        unique=False,
        schema="contas",
    )
    op.create_table(
        "authorization_policies",
        sa.Column("name", sa.String(length=100), nullable=False),
        sa.Column("description", sa.Text(), nullable=False),
        sa.Column(
            "effect", sa.Enum("ALLOW", "DENY", name="policyeffectenum"), nullable=False
        ),
        sa.Column("resource_type", sa.String(length=50), nullable=False),
        sa.Column("action", sa.String(length=50), nullable=False),
        sa.Column("conditions", postgresql.JSON(astext_type=sa.Text()), nullable=False),
        sa.Column("organization_id", sa.UUID(), nullable=True),
        sa.Column("created_by", sa.UUID(), nullable=False),
        sa.Column("priority", sa.Integer(), nullable=False),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(
            ["created_by"],
            ["contas.users.id"],
        ),
        sa.ForeignKeyConstraint(
            ["organization_id"],
            ["contas.organizations.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        schema="contas",
    )
    op.create_index(
        op.f("ix_contas_authorization_policies_action"),
        "authorization_policies",
        ["action"],
        unique=False,
        schema="contas",
    )
    op.create_index(
        op.f("ix_contas_authorization_policies_effect"),
        "authorization_policies",
        ["effect"],
        unique=False,
        schema="contas",
    )
    op.create_index(
        op.f("ix_contas_authorization_policies_name"),
        "authorization_policies",
        ["name"],
        unique=False,
        schema="contas",
    )
    op.create_index(
        op.f("ix_contas_authorization_policies_organization_id"),
        "authorization_policies",
        ["organization_id"],
        unique=False,
        schema="contas",
    )
    op.create_index(
        op.f("ix_contas_authorization_policies_resource_type"),
        "authorization_policies",
        ["resource_type"],
        unique=False,
        schema="contas",
    )
    op.create_index(
        "ix_policy_lookup",
        "authorization_policies",
        ["resource_type", "action", "organization_id"],
        unique=False,
        schema="contas",
    )
    op.create_table(
        "authorization_roles",
        sa.Column("name", sa.String(length=100), nullable=False),
        sa.Column("description", sa.Text(), nullable=False),
        sa.Column("organization_id", sa.UUID(), nullable=True),
        sa.Column("parent_role_id", sa.UUID(), nullable=True),
        sa.Column("created_by", sa.UUID(), nullable=False),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.Column("is_system_role", sa.Boolean(), nullable=False),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(
            ["created_by"],
            ["contas.users.id"],
        ),
        sa.ForeignKeyConstraint(
            ["organization_id"],
            ["contas.organizations.id"],
        ),
        sa.ForeignKeyConstraint(
            ["parent_role_id"],
            ["contas.authorization_roles.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name", "organization_id"),
        schema="contas",
    )
    op.create_index(
        op.f("ix_contas_authorization_roles_name"),
        "authorization_roles",
        ["name"],
        unique=False,
        schema="contas",
    )
    op.create_index(
        op.f("ix_contas_authorization_roles_organization_id"),
        "authorization_roles",
        ["organization_id"],
        unique=False,
        schema="contas",
    )
    op.create_index(
        op.f("ix_contas_authorization_roles_parent_role_id"),
        "authorization_roles",
        ["parent_role_id"],
        unique=False,
        schema="contas",
    )
    op.create_table(
        "authorization_subjects",
        sa.Column("subject_type", sa.String(length=50), nullable=False),
        sa.Column("subject_id", sa.UUID(), nullable=False),
        sa.Column("organization_id", sa.UUID(), nullable=True),
        sa.Column("owner_id", sa.UUID(), nullable=False),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(
            ["organization_id"],
            ["contas.organizations.id"],
        ),
        sa.ForeignKeyConstraint(
            ["owner_id"],
            ["contas.users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint(
            "subject_type", "subject_id", "organization_id", name="uq_auth_subject"
        ),
        schema="contas",
    )
    op.create_index(
        "ix_auth_subject_lookup",
        "authorization_subjects",
        ["subject_type", "subject_id"],
        unique=False,
        schema="contas",
    )
    op.create_index(
        "ix_auth_subject_org",
        "authorization_subjects",
        ["organization_id", "subject_type"],
        unique=False,
        schema="contas",
    )
    op.create_index(
        op.f("ix_contas_authorization_subjects_organization_id"),
        "authorization_subjects",
        ["organization_id"],
        unique=False,
        schema="contas",
    )
    op.create_index(
        op.f("ix_contas_authorization_subjects_owner_id"),
        "authorization_subjects",
        ["owner_id"],
        unique=False,
        schema="contas",
    )
    op.create_index(
        op.f("ix_contas_authorization_subjects_subject_id"),
        "authorization_subjects",
        ["subject_id"],
        unique=False,
        schema="contas",
    )
    op.create_index(
        op.f("ix_contas_authorization_subjects_subject_type"),
        "authorization_subjects",
        ["subject_type"],
        unique=False,
        schema="contas",
    )
    op.create_table(
        "plan_resources",
        sa.Column("resource_type", sa.String(length=50), nullable=False),
        sa.Column("name", sa.String(length=100), nullable=False),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("category", sa.String(length=50), nullable=False),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.Column("created_by", sa.UUID(), nullable=False),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(
            ["created_by"],
            ["contas.users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        schema="contas",
    )
    op.create_index(
        op.f("ix_contas_plan_resources_category"),
        "plan_resources",
        ["category"],
        unique=False,
        schema="contas",
    )
    op.create_index(
        op.f("ix_contas_plan_resources_resource_type"),
        "plan_resources",
        ["resource_type"],
        unique=True,
        schema="contas",
    )
    op.create_table(
        "plans",
        sa.Column("name", sa.String(length=100), nullable=False),
        sa.Column("description", sa.Text(), nullable=False),
        sa.Column(
            "plan_type",
            sa.Enum("BASIC", "PREMIUM", "ENTERPRISE", name="plantypeenum"),
            nullable=False,
        ),
        sa.Column("price_monthly", sa.Numeric(precision=10, scale=2), nullable=True),
        sa.Column("price_yearly", sa.Numeric(precision=10, scale=2), nullable=True),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.Column("created_by", sa.UUID(), nullable=False),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(
            ["created_by"],
            ["contas.users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        schema="contas",
    )
    op.create_index(
        op.f("ix_contas_plans_name"), "plans", ["name"], unique=True, schema="contas"
    )
    op.create_index(
        op.f("ix_contas_plans_plan_type"),
        "plans",
        ["plan_type"],
        unique=False,
        schema="contas",
    )
    op.create_table(
        "profiles",
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.Column("description", sa.Text(), nullable=False),
        sa.Column("organization_id", sa.UUID(), nullable=False),
        sa.Column("created_by", sa.UUID(), nullable=False),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.Column("is_system_profile", sa.Boolean(), nullable=False),
        sa.Column(
            "profile_metadata", postgresql.JSON(astext_type=sa.Text()), nullable=False
        ),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(
            ["created_by"],
            ["contas.users.id"],
        ),
        sa.ForeignKeyConstraint(
            ["organization_id"],
            ["contas.organizations.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name", "organization_id", name="uq_profile_name_org"),
        schema="contas",
    )
    op.create_index(
        op.f("ix_contas_profiles_name"),
        "profiles",
        ["name"],
        unique=False,
        schema="contas",
    )
    op.create_index(
        op.f("ix_contas_profiles_organization_id"),
        "profiles",
        ["organization_id"],
        unique=False,
        schema="contas",
    )
    op.create_index(
        "ix_profile_active",
        "profiles",
        ["is_active", "organization_id"],
        unique=False,
        schema="contas",
    )
    op.create_index(
        "ix_profile_system",
        "profiles",
        ["is_system_profile"],
        unique=False,
        schema="contas",
    )
    op.create_table(
        "user_sessions",
        sa.Column("user_id", sa.UUID(), nullable=False),
        sa.Column("session_token", sa.String(length=500), nullable=False),
        sa.Column(
            "status",
            sa.Enum(
                "ACTIVE", "EXPIRED", "LOGGED_OUT", "REVOKED", name="sessionstatusenum"
            ),
            nullable=False,
        ),
        sa.Column("expires_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("ip_address", sa.String(length=45), nullable=True),
        sa.Column("user_agent", sa.Text(), nullable=True),
        sa.Column(
            "last_activity_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("logout_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("session_data", sa.Text(), nullable=True),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["contas.users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        schema="contas",
    )
    op.create_index(
        op.f("ix_contas_user_sessions_expires_at"),
        "user_sessions",
        ["expires_at"],
        unique=False,
        schema="contas",
    )
    op.create_index(
        op.f("ix_contas_user_sessions_session_token"),
        "user_sessions",
        ["session_token"],
        unique=True,
        schema="contas",
    )
    op.create_index(
        op.f("ix_contas_user_sessions_status"),
        "user_sessions",
        ["status"],
        unique=False,
        schema="contas",
    )
    op.create_index(
        op.f("ix_contas_user_sessions_user_id"),
        "user_sessions",
        ["user_id"],
        unique=False,
        schema="contas",
    )
    op.create_table(
        "application_instances",
        sa.Column("plan_resource_id", sa.UUID(), nullable=False),
        sa.Column("organization_id", sa.UUID(), nullable=False),
        sa.Column("instance_name", sa.String(length=200), nullable=False),
        sa.Column(
            "configuration", postgresql.JSON(astext_type=sa.Text()), nullable=False
        ),
        sa.Column("api_keys", postgresql.JSON(astext_type=sa.Text()), nullable=False),
        sa.Column(
            "limits_override", postgresql.JSON(astext_type=sa.Text()), nullable=False
        ),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.Column("owner_id", sa.UUID(), nullable=False),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(
            ["organization_id"],
            ["contas.organizations.id"],
        ),
        sa.ForeignKeyConstraint(
            ["owner_id"],
            ["contas.users.id"],
        ),
        sa.ForeignKeyConstraint(
            ["plan_resource_id"],
            ["contas.plan_resources.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint(
            "organization_id", "plan_resource_id", name="uq_org_application_instance"
        ),
        schema="contas",
    )
    op.create_index(
        "ix_app_instance_active",
        "application_instances",
        ["is_active", "organization_id"],
        unique=False,
        schema="contas",
    )
    op.create_index(
        "ix_app_instance_lookup",
        "application_instances",
        ["organization_id", "plan_resource_id"],
        unique=False,
        schema="contas",
    )
    op.create_index(
        op.f("ix_contas_application_instances_organization_id"),
        "application_instances",
        ["organization_id"],
        unique=False,
        schema="contas",
    )
    op.create_index(
        op.f("ix_contas_application_instances_owner_id"),
        "application_instances",
        ["owner_id"],
        unique=False,
        schema="contas",
    )
    op.create_index(
        op.f("ix_contas_application_instances_plan_resource_id"),
        "application_instances",
        ["plan_resource_id"],
        unique=False,
        schema="contas",
    )
    op.create_table(
        "plan_resource_associations",
        sa.Column("plan_id", sa.UUID(), nullable=False),
        sa.Column("resource_id", sa.UUID(), nullable=False),
        sa.Column("is_included", sa.Boolean(), nullable=False),
        sa.Column("additional_cost", sa.Numeric(precision=10, scale=2), nullable=True),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(
            ["plan_id"],
            ["contas.plans.id"],
        ),
        sa.ForeignKeyConstraint(
            ["resource_id"],
            ["contas.plan_resources.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("plan_id", "resource_id", name="uq_plan_resource"),
        schema="contas",
    )
    op.create_index(
        op.f("ix_contas_plan_resource_associations_plan_id"),
        "plan_resource_associations",
        ["plan_id"],
        unique=False,
        schema="contas",
    )
    op.create_index(
        op.f("ix_contas_plan_resource_associations_resource_id"),
        "plan_resource_associations",
        ["resource_id"],
        unique=False,
        schema="contas",
    )
    op.create_table(
        "plan_resource_features",
        sa.Column("resource_id", sa.UUID(), nullable=False),
        sa.Column("feature_key", sa.String(length=100), nullable=False),
        sa.Column("feature_name", sa.String(length=200), nullable=False),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("is_default", sa.Boolean(), nullable=False),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(
            ["resource_id"],
            ["contas.plan_resources.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint(
            "resource_id", "feature_key", name="uq_resource_feature_key"
        ),
        schema="contas",
    )
    op.create_index(
        op.f("ix_contas_plan_resource_features_feature_key"),
        "plan_resource_features",
        ["feature_key"],
        unique=False,
        schema="contas",
    )
    op.create_index(
        op.f("ix_contas_plan_resource_features_resource_id"),
        "plan_resource_features",
        ["resource_id"],
        unique=False,
        schema="contas",
    )
    op.create_table(
        "plan_resource_limits",
        sa.Column("resource_id", sa.UUID(), nullable=False),
        sa.Column("limit_key", sa.String(length=100), nullable=False),
        sa.Column("limit_name", sa.String(length=200), nullable=False),
        sa.Column("limit_type", sa.String(length=50), nullable=False),
        sa.Column("default_value", sa.Integer(), nullable=True),
        sa.Column("unit", sa.String(length=20), nullable=True),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(
            ["resource_id"],
            ["contas.plan_resources.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("resource_id", "limit_key", name="uq_resource_limit_key"),
        schema="contas",
    )
    op.create_index(
        op.f("ix_contas_plan_resource_limits_limit_key"),
        "plan_resource_limits",
        ["limit_key"],
        unique=False,
        schema="contas",
    )
    op.create_index(
        op.f("ix_contas_plan_resource_limits_resource_id"),
        "plan_resource_limits",
        ["resource_id"],
        unique=False,
        schema="contas",
    )
    op.create_table(
        "profile_folder_permissions",
        sa.Column("profile_id", sa.UUID(), nullable=False),
        sa.Column("folder_path", sa.String(length=1000), nullable=False),
        sa.Column(
            "permission_level",
            sa.Enum("READ", "EDIT", "FULL", name="folderpermissionlevelenum"),
            nullable=False,
        ),
        sa.Column("organization_id", sa.UUID(), nullable=False),
        sa.Column("created_by", sa.UUID(), nullable=False),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.Column("notes", sa.Text(), nullable=True),
        sa.Column("extra_data", postgresql.JSON(astext_type=sa.Text()), nullable=False),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(
            ["created_by"],
            ["contas.users.id"],
        ),
        sa.ForeignKeyConstraint(
            ["organization_id"],
            ["contas.organizations.id"],
        ),
        sa.ForeignKeyConstraint(
            ["profile_id"],
            ["contas.profiles.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("profile_id", "folder_path", name="uq_profile_folder"),
        schema="contas",
    )
    op.create_index(
        op.f("ix_contas_profile_folder_permissions_folder_path"),
        "profile_folder_permissions",
        ["folder_path"],
        unique=False,
        schema="contas",
    )
    op.create_index(
        op.f("ix_contas_profile_folder_permissions_organization_id"),
        "profile_folder_permissions",
        ["organization_id"],
        unique=False,
        schema="contas",
    )
    op.create_index(
        op.f("ix_contas_profile_folder_permissions_permission_level"),
        "profile_folder_permissions",
        ["permission_level"],
        unique=False,
        schema="contas",
    )
    op.create_index(
        op.f("ix_contas_profile_folder_permissions_profile_id"),
        "profile_folder_permissions",
        ["profile_id"],
        unique=False,
        schema="contas",
    )
    op.create_index(
        "ix_profile_folder_active",
        "profile_folder_permissions",
        ["is_active", "profile_id"],
        unique=False,
        schema="contas",
    )
    op.create_index(
        "ix_profile_folder_level",
        "profile_folder_permissions",
        ["permission_level", "organization_id"],
        unique=False,
        schema="contas",
    )
    op.create_index(
        "ix_profile_folder_path",
        "profile_folder_permissions",
        ["folder_path", "organization_id"],
        unique=False,
        schema="contas",
    )
    op.create_table(
        "role_permissions",
        sa.Column("role_id", sa.UUID(), nullable=False),
        sa.Column("permission_id", sa.UUID(), nullable=False),
        sa.Column(
            "assigned_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["permission_id"],
            ["contas.authorization_permissions.id"],
        ),
        sa.ForeignKeyConstraint(
            ["role_id"],
            ["contas.authorization_roles.id"],
        ),
        sa.PrimaryKeyConstraint("role_id", "permission_id"),
        schema="contas",
    )
    op.create_table(
        "subscriptions",
        sa.Column("organization_id", sa.UUID(), nullable=False),
        sa.Column("plan_id", sa.UUID(), nullable=False),
        sa.Column(
            "status",
            sa.Enum(
                "ACTIVE",
                "INACTIVE",
                "PENDING",
                "CANCELLED",
                "EXPIRED",
                "TRIAL",
                "SUSPENDED",
                name="subscriptionstatusenum",
            ),
            nullable=False,
        ),
        sa.Column(
            "billing_cycle",
            sa.Enum(
                "MONTHLY", "YEARLY", "QUARTERLY", "WEEKLY", name="billingcycleenum"
            ),
            nullable=False,
        ),
        sa.Column("starts_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("ends_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("next_billing_date", sa.DateTime(timezone=True), nullable=True),
        sa.Column("cancelled_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column(
            "subscription_metadata",
            postgresql.JSON(astext_type=sa.Text()),
            nullable=False,
        ),
        sa.Column("created_by", sa.UUID(), nullable=False),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(
            ["created_by"],
            ["contas.users.id"],
        ),
        sa.ForeignKeyConstraint(
            ["organization_id"],
            ["contas.organizations.id"],
        ),
        sa.ForeignKeyConstraint(
            ["plan_id"],
            ["contas.plans.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        schema="contas",
    )
    op.create_index(
        "ix_active_subscription_per_org",
        "subscriptions",
        ["organization_id"],
        unique=False,
        schema="contas",
    )
    op.create_index(
        op.f("ix_contas_subscriptions_billing_cycle"),
        "subscriptions",
        ["billing_cycle"],
        unique=False,
        schema="contas",
    )
    op.create_index(
        op.f("ix_contas_subscriptions_organization_id"),
        "subscriptions",
        ["organization_id"],
        unique=False,
        schema="contas",
    )
    op.create_index(
        op.f("ix_contas_subscriptions_plan_id"),
        "subscriptions",
        ["plan_id"],
        unique=False,
        schema="contas",
    )
    op.create_index(
        op.f("ix_contas_subscriptions_starts_at"),
        "subscriptions",
        ["starts_at"],
        unique=False,
        schema="contas",
    )
    op.create_index(
        op.f("ix_contas_subscriptions_status"),
        "subscriptions",
        ["status"],
        unique=False,
        schema="contas",
    )
    op.create_table(
        "user_profiles",
        sa.Column("user_id", sa.UUID(), nullable=False),
        sa.Column("profile_id", sa.UUID(), nullable=False),
        sa.Column("organization_id", sa.UUID(), nullable=False),
        sa.Column("assigned_by", sa.UUID(), nullable=False),
        sa.Column("assigned_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("expires_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.Column("revoked_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("revoked_by", sa.UUID(), nullable=True),
        sa.Column("notes", sa.Text(), nullable=True),
        sa.Column("extra_data", postgresql.JSON(astext_type=sa.Text()), nullable=False),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(
            ["assigned_by"],
            ["contas.users.id"],
        ),
        sa.ForeignKeyConstraint(
            ["organization_id"],
            ["contas.organizations.id"],
        ),
        sa.ForeignKeyConstraint(
            ["profile_id"],
            ["contas.profiles.id"],
        ),
        sa.ForeignKeyConstraint(
            ["revoked_by"],
            ["contas.users.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["contas.users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("user_id", "profile_id", name="uq_user_profile"),
        schema="contas",
    )
    op.create_index(
        op.f("ix_contas_user_profiles_organization_id"),
        "user_profiles",
        ["organization_id"],
        unique=False,
        schema="contas",
    )
    op.create_index(
        op.f("ix_contas_user_profiles_profile_id"),
        "user_profiles",
        ["profile_id"],
        unique=False,
        schema="contas",
    )
    op.create_index(
        op.f("ix_contas_user_profiles_user_id"),
        "user_profiles",
        ["user_id"],
        unique=False,
        schema="contas",
    )
    op.create_index(
        "ix_user_profile_active",
        "user_profiles",
        ["is_active", "user_id", "organization_id"],
        unique=False,
        schema="contas",
    )
    op.create_index(
        "ix_user_profile_assigned",
        "user_profiles",
        ["assigned_at"],
        unique=False,
        schema="contas",
    )
    op.create_index(
        "ix_user_profile_expires",
        "user_profiles",
        ["expires_at"],
        unique=False,
        schema="contas",
    )
    op.create_table(
        "user_role_assignments",
        sa.Column("user_id", sa.UUID(), nullable=False),
        sa.Column("role_id", sa.UUID(), nullable=False),
        sa.Column("assigned_by", sa.UUID(), nullable=False),
        sa.Column(
            "assigned_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("expires_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.ForeignKeyConstraint(
            ["assigned_by"],
            ["contas.users.id"],
        ),
        sa.ForeignKeyConstraint(
            ["role_id"],
            ["contas.authorization_roles.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["contas.users.id"],
        ),
        sa.PrimaryKeyConstraint("user_id", "role_id"),
        schema="contas",
    )
    op.create_table(
        "feature_usage",
        sa.Column("application_instance_id", sa.UUID(), nullable=False),
        sa.Column("feature_id", sa.UUID(), nullable=False),
        sa.Column("usage_count", sa.Integer(), nullable=False),
        sa.Column("usage_date", sa.DateTime(timezone=True), nullable=False),
        sa.Column(
            "usage_details", postgresql.JSON(astext_type=sa.Text()), nullable=False
        ),
        sa.Column("cost", sa.Numeric(precision=10, scale=4), nullable=True),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(
            ["application_instance_id"],
            ["contas.application_instances.id"],
        ),
        sa.ForeignKeyConstraint(
            ["feature_id"],
            ["contas.plan_resource_features.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        schema="contas",
    )
    op.create_index(
        op.f("ix_contas_feature_usage_application_instance_id"),
        "feature_usage",
        ["application_instance_id"],
        unique=False,
        schema="contas",
    )
    op.create_index(
        op.f("ix_contas_feature_usage_feature_id"),
        "feature_usage",
        ["feature_id"],
        unique=False,
        schema="contas",
    )
    op.create_index(
        op.f("ix_contas_feature_usage_usage_date"),
        "feature_usage",
        ["usage_date"],
        unique=False,
        schema="contas",
    )
    op.create_index(
        "ix_usage_by_date",
        "feature_usage",
        ["usage_date"],
        unique=False,
        schema="contas",
    )
    op.create_index(
        "ix_usage_by_instance",
        "feature_usage",
        ["application_instance_id", "usage_date"],
        unique=False,
        schema="contas",
    )
    op.create_index(
        "ix_usage_lookup",
        "feature_usage",
        ["application_instance_id", "feature_id", "usage_date"],
        unique=False,
        schema="contas",
    )
    op.create_table(
        "plan_resource_feature_configs",
        sa.Column("plan_resource_association_id", sa.UUID(), nullable=False),
        sa.Column("feature_id", sa.UUID(), nullable=False),
        sa.Column("is_enabled", sa.Boolean(), nullable=False),
        sa.Column(
            "custom_config", postgresql.JSON(astext_type=sa.Text()), nullable=False
        ),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(
            ["feature_id"],
            ["contas.plan_resource_features.id"],
        ),
        sa.ForeignKeyConstraint(
            ["plan_resource_association_id"],
            ["contas.plan_resource_associations.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint(
            "plan_resource_association_id", "feature_id", name="uq_plan_feature_config"
        ),
        schema="contas",
    )
    op.create_index(
        op.f("ix_contas_plan_resource_feature_configs_feature_id"),
        "plan_resource_feature_configs",
        ["feature_id"],
        unique=False,
        schema="contas",
    )
    op.create_index(
        op.f("ix_contas_plan_resource_feature_configs_plan_resource_association_id"),
        "plan_resource_feature_configs",
        ["plan_resource_association_id"],
        unique=False,
        schema="contas",
    )
    op.create_table(
        "plan_resource_limit_configs",
        sa.Column("plan_resource_association_id", sa.UUID(), nullable=False),
        sa.Column("limit_id", sa.UUID(), nullable=False),
        sa.Column("limit_value", sa.Integer(), nullable=False),
        sa.Column(
            "custom_config", postgresql.JSON(astext_type=sa.Text()), nullable=False
        ),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(
            ["limit_id"],
            ["contas.plan_resource_limits.id"],
        ),
        sa.ForeignKeyConstraint(
            ["plan_resource_association_id"],
            ["contas.plan_resource_associations.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint(
            "plan_resource_association_id", "limit_id", name="uq_plan_limit_config"
        ),
        schema="contas",
    )
    op.create_index(
        op.f("ix_contas_plan_resource_limit_configs_limit_id"),
        "plan_resource_limit_configs",
        ["limit_id"],
        unique=False,
        schema="contas",
    )
    op.create_index(
        op.f("ix_contas_plan_resource_limit_configs_plan_resource_association_id"),
        "plan_resource_limit_configs",
        ["plan_resource_association_id"],
        unique=False,
        schema="contas",
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(
        op.f("ix_contas_plan_resource_limit_configs_plan_resource_association_id"),
        table_name="plan_resource_limit_configs",
        schema="contas",
    )
    op.drop_index(
        op.f("ix_contas_plan_resource_limit_configs_limit_id"),
        table_name="plan_resource_limit_configs",
        schema="contas",
    )
    op.drop_table("plan_resource_limit_configs", schema="contas")
    op.drop_index(
        op.f("ix_contas_plan_resource_feature_configs_plan_resource_association_id"),
        table_name="plan_resource_feature_configs",
        schema="contas",
    )
    op.drop_index(
        op.f("ix_contas_plan_resource_feature_configs_feature_id"),
        table_name="plan_resource_feature_configs",
        schema="contas",
    )
    op.drop_table("plan_resource_feature_configs", schema="contas")
    op.drop_index("ix_usage_lookup", table_name="feature_usage", schema="contas")
    op.drop_index("ix_usage_by_instance", table_name="feature_usage", schema="contas")
    op.drop_index("ix_usage_by_date", table_name="feature_usage", schema="contas")
    op.drop_index(
        op.f("ix_contas_feature_usage_usage_date"),
        table_name="feature_usage",
        schema="contas",
    )
    op.drop_index(
        op.f("ix_contas_feature_usage_feature_id"),
        table_name="feature_usage",
        schema="contas",
    )
    op.drop_index(
        op.f("ix_contas_feature_usage_application_instance_id"),
        table_name="feature_usage",
        schema="contas",
    )
    op.drop_table("feature_usage", schema="contas")
    op.drop_table("user_role_assignments", schema="contas")
    op.drop_index(
        "ix_user_profile_expires", table_name="user_profiles", schema="contas"
    )
    op.drop_index(
        "ix_user_profile_assigned", table_name="user_profiles", schema="contas"
    )
    op.drop_index("ix_user_profile_active", table_name="user_profiles", schema="contas")
    op.drop_index(
        op.f("ix_contas_user_profiles_user_id"),
        table_name="user_profiles",
        schema="contas",
    )
    op.drop_index(
        op.f("ix_contas_user_profiles_profile_id"),
        table_name="user_profiles",
        schema="contas",
    )
    op.drop_index(
        op.f("ix_contas_user_profiles_organization_id"),
        table_name="user_profiles",
        schema="contas",
    )
    op.drop_table("user_profiles", schema="contas")
    op.drop_index(
        op.f("ix_contas_subscriptions_status"),
        table_name="subscriptions",
        schema="contas",
    )
    op.drop_index(
        op.f("ix_contas_subscriptions_starts_at"),
        table_name="subscriptions",
        schema="contas",
    )
    op.drop_index(
        op.f("ix_contas_subscriptions_plan_id"),
        table_name="subscriptions",
        schema="contas",
    )
    op.drop_index(
        op.f("ix_contas_subscriptions_organization_id"),
        table_name="subscriptions",
        schema="contas",
    )
    op.drop_index(
        op.f("ix_contas_subscriptions_billing_cycle"),
        table_name="subscriptions",
        schema="contas",
    )
    op.drop_index(
        "ix_active_subscription_per_org",
        table_name="subscriptions",
        schema="contas",
        postgresql_where="status = 'active'",
    )
    op.drop_table("subscriptions", schema="contas")
    op.drop_table("role_permissions", schema="contas")
    op.drop_index(
        "ix_profile_folder_path",
        table_name="profile_folder_permissions",
        schema="contas",
    )
    op.drop_index(
        "ix_profile_folder_level",
        table_name="profile_folder_permissions",
        schema="contas",
    )
    op.drop_index(
        "ix_profile_folder_active",
        table_name="profile_folder_permissions",
        schema="contas",
    )
    op.drop_index(
        op.f("ix_contas_profile_folder_permissions_profile_id"),
        table_name="profile_folder_permissions",
        schema="contas",
    )
    op.drop_index(
        op.f("ix_contas_profile_folder_permissions_permission_level"),
        table_name="profile_folder_permissions",
        schema="contas",
    )
    op.drop_index(
        op.f("ix_contas_profile_folder_permissions_organization_id"),
        table_name="profile_folder_permissions",
        schema="contas",
    )
    op.drop_index(
        op.f("ix_contas_profile_folder_permissions_folder_path"),
        table_name="profile_folder_permissions",
        schema="contas",
    )
    op.drop_table("profile_folder_permissions", schema="contas")
    op.drop_index(
        op.f("ix_contas_plan_resource_limits_resource_id"),
        table_name="plan_resource_limits",
        schema="contas",
    )
    op.drop_index(
        op.f("ix_contas_plan_resource_limits_limit_key"),
        table_name="plan_resource_limits",
        schema="contas",
    )
    op.drop_table("plan_resource_limits", schema="contas")
    op.drop_index(
        op.f("ix_contas_plan_resource_features_resource_id"),
        table_name="plan_resource_features",
        schema="contas",
    )
    op.drop_index(
        op.f("ix_contas_plan_resource_features_feature_key"),
        table_name="plan_resource_features",
        schema="contas",
    )
    op.drop_table("plan_resource_features", schema="contas")
    op.drop_index(
        op.f("ix_contas_plan_resource_associations_resource_id"),
        table_name="plan_resource_associations",
        schema="contas",
    )
    op.drop_index(
        op.f("ix_contas_plan_resource_associations_plan_id"),
        table_name="plan_resource_associations",
        schema="contas",
    )
    op.drop_table("plan_resource_associations", schema="contas")
    op.drop_index(
        op.f("ix_contas_application_instances_plan_resource_id"),
        table_name="application_instances",
        schema="contas",
    )
    op.drop_index(
        op.f("ix_contas_application_instances_owner_id"),
        table_name="application_instances",
        schema="contas",
    )
    op.drop_index(
        op.f("ix_contas_application_instances_organization_id"),
        table_name="application_instances",
        schema="contas",
    )
    op.drop_index(
        "ix_app_instance_lookup", table_name="application_instances", schema="contas"
    )
    op.drop_index(
        "ix_app_instance_active", table_name="application_instances", schema="contas"
    )
    op.drop_table("application_instances", schema="contas")
    op.drop_index(
        op.f("ix_contas_user_sessions_user_id"),
        table_name="user_sessions",
        schema="contas",
    )
    op.drop_index(
        op.f("ix_contas_user_sessions_status"),
        table_name="user_sessions",
        schema="contas",
    )
    op.drop_index(
        op.f("ix_contas_user_sessions_session_token"),
        table_name="user_sessions",
        schema="contas",
    )
    op.drop_index(
        op.f("ix_contas_user_sessions_expires_at"),
        table_name="user_sessions",
        schema="contas",
    )
    op.drop_table("user_sessions", schema="contas")
    op.drop_index("ix_profile_system", table_name="profiles", schema="contas")
    op.drop_index("ix_profile_active", table_name="profiles", schema="contas")
    op.drop_index(
        op.f("ix_contas_profiles_organization_id"),
        table_name="profiles",
        schema="contas",
    )
    op.drop_index(
        op.f("ix_contas_profiles_name"), table_name="profiles", schema="contas"
    )
    op.drop_table("profiles", schema="contas")
    op.drop_index(
        op.f("ix_contas_plans_plan_type"), table_name="plans", schema="contas"
    )
    op.drop_index(op.f("ix_contas_plans_name"), table_name="plans", schema="contas")
    op.drop_table("plans", schema="contas")
    op.drop_index(
        op.f("ix_contas_plan_resources_resource_type"),
        table_name="plan_resources",
        schema="contas",
    )
    op.drop_index(
        op.f("ix_contas_plan_resources_category"),
        table_name="plan_resources",
        schema="contas",
    )
    op.drop_table("plan_resources", schema="contas")
    op.drop_index(
        op.f("ix_contas_authorization_subjects_subject_type"),
        table_name="authorization_subjects",
        schema="contas",
    )
    op.drop_index(
        op.f("ix_contas_authorization_subjects_subject_id"),
        table_name="authorization_subjects",
        schema="contas",
    )
    op.drop_index(
        op.f("ix_contas_authorization_subjects_owner_id"),
        table_name="authorization_subjects",
        schema="contas",
    )
    op.drop_index(
        op.f("ix_contas_authorization_subjects_organization_id"),
        table_name="authorization_subjects",
        schema="contas",
    )
    op.drop_index(
        "ix_auth_subject_org", table_name="authorization_subjects", schema="contas"
    )
    op.drop_index(
        "ix_auth_subject_lookup", table_name="authorization_subjects", schema="contas"
    )
    op.drop_table("authorization_subjects", schema="contas")
    op.drop_index(
        op.f("ix_contas_authorization_roles_parent_role_id"),
        table_name="authorization_roles",
        schema="contas",
    )
    op.drop_index(
        op.f("ix_contas_authorization_roles_organization_id"),
        table_name="authorization_roles",
        schema="contas",
    )
    op.drop_index(
        op.f("ix_contas_authorization_roles_name"),
        table_name="authorization_roles",
        schema="contas",
    )
    op.drop_table("authorization_roles", schema="contas")
    op.drop_index(
        "ix_policy_lookup", table_name="authorization_policies", schema="contas"
    )
    op.drop_index(
        op.f("ix_contas_authorization_policies_resource_type"),
        table_name="authorization_policies",
        schema="contas",
    )
    op.drop_index(
        op.f("ix_contas_authorization_policies_organization_id"),
        table_name="authorization_policies",
        schema="contas",
    )
    op.drop_index(
        op.f("ix_contas_authorization_policies_name"),
        table_name="authorization_policies",
        schema="contas",
    )
    op.drop_index(
        op.f("ix_contas_authorization_policies_effect"),
        table_name="authorization_policies",
        schema="contas",
    )
    op.drop_index(
        op.f("ix_contas_authorization_policies_action"),
        table_name="authorization_policies",
        schema="contas",
    )
    op.drop_table("authorization_policies", schema="contas")
    op.drop_index(
        op.f("ix_contas_users_organization_id"), table_name="users", schema="contas"
    )
    op.drop_index(op.f("ix_contas_users_email"), table_name="users", schema="contas")
    op.drop_table("users", schema="contas")
    op.drop_index(
        op.f("ix_contas_organizations_owner_id"),
        table_name="organizations",
        schema="contas",
    )
    op.drop_index(
        op.f("ix_contas_organizations_name"),
        table_name="organizations",
        schema="contas",
    )
    op.drop_table("organizations", schema="contas")
    op.drop_index(
        op.f("ix_contas_authorization_permissions_resource_type"),
        table_name="authorization_permissions",
        schema="contas",
    )
    op.drop_index(
        op.f("ix_contas_authorization_permissions_name"),
        table_name="authorization_permissions",
        schema="contas",
    )
    op.drop_index(
        op.f("ix_contas_authorization_permissions_action"),
        table_name="authorization_permissions",
        schema="contas",
    )
    op.drop_table("authorization_permissions", schema="contas")
    # ### end Alembic commands ###
